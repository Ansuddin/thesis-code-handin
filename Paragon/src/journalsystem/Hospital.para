import java.util.HashMap;
import java.util.ArrayList;
import java.util.Set;
import java.lang.System;
import java.util.Scanner;

public class Hospital{
	
	private final Matrix<Policy.lowD+Policy.trusted> matrix;
	private final HashMap<String,String> patients;
	private final ArrayList<Policy.bottom,Employee> employees;

	public Hospital(?Policy.bottom HashMap<String,String> patients, 
			?Policy.bottom Matrix<Policy.lowD+Policy.trusted> matrix){
		this.matrix = matrix;
		this.patients = patients;
		this.employees =  new ArrayList<Policy.bottom,Employee>();
	}

	?(Policy.lowD+Policy.trusted)
	public PatientJournalD getJournal(?(Policy.lowD+Policy.trusted)String ssn){
		String room = patients.get(ssn);
		String JSON = matrix.retrieve(room);
		PatientJournalD journal = Mapper.JSONToObject(JSON);
		return journal;
	}


	!(Policy.lowD+Policy.trusted)
	public void updateJournal(?(Policy.lowD+Policy.trusted)PatientJournalD journal){
		String room = patients.get(journal.getSsn());
		String json = Mapper.objectToJSON(journal);
		matrix.send(json,room);
	}

	!(Policy.lowD+Policy.trusted)
	public void selectPatient(Employee employee) {
		Scanner scanner = new Scanner(System.in);
		String[] patientArray = patients.keySet().toArray(new String[patients.size()]);
		while(true){
			System.out.println("Level2");
			System.out.println("Select a patient:");
			for(int i=0; i<patients.size(); i++){
				System.out.println(i+1 + ". " + patientArray[i]);
			}
			System.out.println("0. Back");
			int option = scanner.nextInt();
			if(option>0 && option <=patientArray.length){
				String ssn = patientArray[option-1];
				employee.receive(getJournal(ssn), scanner);
			} else {
				break;
			}
		}
	}

	!Policy.bottom
	public void selectEmployee(){
		Employee[] list = new Employee[employees.size()];
		list = this.employees.<Employee>toArray(list);
		Scanner scanner = new Scanner(System.in);
		while(true){
			System.out.println("Level 1");
			System.out.println("Select an employee: ");
			for(int i=0; i<list.length; i++){
				System.out.println(i+1 + ". " + list[i].getName() + ", " + list[i].getTitle());
			}
			System.out.println("0. Exit");
			int option = scanner.nextInt();
			if(option>0 && option <=list.length){
				Employee employee = list[option-1];
				selectPatient(employee);
			} else {
				break;
			}
		}
	}

	!Policy.bottom
	public void addEmployee(?Policy.bottom Employee employee){
		this.employees.add(employee);

	}

}